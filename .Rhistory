library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
head(mtcars)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars=c("mpg", "hp"))
head(carMelt)
setwd("./getting-cleaning-data")  # wd for the 'Getting and Cleaning Data' Course Project
library(dplyr)
library(reshape2)
dpathbase <- "UCI HAR Dataset/"
dpathtest <- paste0(dpathbase, "test/")
dpathtrain <- paste0(dpathbase, "train/")
activities <- tbl_df(read.table(paste0(dpathbase, "activity_labels.txt"), col.names= c("id", "activity")))
features <- tbl_df(read.table(paste0(dpathbase, "features.txt"), col.names= c("ind", "names")))
test_labels <- tbl_df(read.table(paste0(dpathtest, "y_test.txt"), col.names= "id"))
train_labels <- tbl_df(read.table(paste0(dpathtrain, "y_train.txt"), col.names= "id"))
subject_test <- tbl_df(read.table(paste0(dpathtest, "subject_test.txt"), col.names= "subject_id"))
subject_train <- tbl_df(read.table(paste0(dpathtrain, "subject_train.txt"), col.names= "subject_id"))
testset <- tbl_df(read.table(paste0(dpathtest, "X_test.txt"), col.names=features$names, colClasses = "numeric"))
trainset <- tbl_df(read.table(paste0(dpathtrain, "X_train.txt"), col.names=features$names, colClasses = "numeric"))
data0 <- tbl_df(rbind(cbind(subject_test, test_labels, testset), cbind(subject_train, train_labels, trainset)))
data <- tbl_df(merge(activities, data0, by.x="id", by.y="id"))  %>% select(-id)
data
data_S <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
data_s
data_S
rm(data_S)
data_s <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
names(data_s)
select(names(data_s), -c("activity", "subject_id"))
ndum <- names(data_s)
ndum[!ndum %in% c("activity", "subject_id")]
data_s <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
mvars <- names(data_s)[!names(data_s) %in% c("activity", "subject_id")]
dataMelt <- melt(data_s, id=c("activity", "subject_id"), measure.vars=mvars)
data_s
dataMelt
data_s <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
mvars <- names(data_s)[!names(data_s) %in% c("activity", "subject_id")]
dataMelt <- tbl_df(melt(data_s, id=c("activity", "subject_id"), measure.vars=mvars))
dataMelt
dataMelt_g <- dataMelt %>% group_by(activity, subject_id) %>% summarize_each(funs(mean)) %>% print
warnings()
dataMelt_g <- dataMelt %>% group_by(activity, subject_id) %>% summarize(mean=mean(value)) %>% print
dataMelt <- tbl_df(melt(data_s, id=c("activity", "subject_id"), measure.vars=mvars))
dataMelt_g <- dataMelt %>% group_by(activity, subject_id, variable) %>% summarize(mean=mean(value)) %>% print
dataMelt
library(dplyr)
dpathbase <- "UCI HAR Dataset/"
dpathtest <- paste0(dpathbase, "test/")
dpathtrain <- paste0(dpathbase, "train/")
activities <- tbl_df(read.table(paste0(dpathbase, "activity_labels.txt"), col.names= c("id", "activity")))
features <- tbl_df(read.table(paste0(dpathbase, "features.txt"), col.names= c("ind", "names")))
test_labels <- tbl_df(read.table(paste0(dpathtest, "y_test.txt"), col.names= "id"))
train_labels <- tbl_df(read.table(paste0(dpathtrain, "y_train.txt"), col.names= "id"))
subject_test <- tbl_df(read.table(paste0(dpathtest, "subject_test.txt"), col.names= "subject_id"))
subject_train <- tbl_df(read.table(paste0(dpathtrain, "subject_train.txt"), col.names= "subject_id"))
testset <- tbl_df(read.table(paste0(dpathtest, "X_test.txt"), col.names=features$names, colClasses = "numeric"))
trainset <- tbl_df(read.table(paste0(dpathtrain, "X_train.txt"), col.names=features$names, colClasses = "numeric"))
data0 <- tbl_df(rbind(cbind(subject_test, test_labels, testset), cbind(subject_train, train_labels, trainset)))
data <- tbl_df(merge(activities, data0, by.x="id", by.y="id"))  %>% select(-id)
# I select all features with 'mean' or 'std' in their names with either upper or lower case
data_S <- select(data, subject_id, activity, matches("mean|std"))  # 'matches(x, ignore.case = TRUE)' by default
data_s_g <- data_S %>% group_by(activity, subject_id) %>% summarize_each(funs(mean)) %>% print
data_s_g[activity="LAYING", subject_id=2]
good <- data_s_g[, activity="LAYING" & subject_id=2]
good <- data_s_g[, activity=="LAYING" & subject_id==2]
good <- data_s_g[, "activity"=="LAYING" & "subject_id"==2]
data_s_g[good,]
head(good)
good
good <- data_s_g[, "activity"=="WALKING" & "subject_id"==2]
good
good <- data_s_g[, "activity"=="WALKING"]
good
data_s_g
data_s_g[activity]
data_s_g["activity"]
filter(data_s_g, activity=="WALKING" & subject_id==2)
dataMelt_g
filter(dataMelt_g, activity=="WALKING" & subject_id==2)
filter(data_s_g, activity=="WALKING" & subject_id==2)
data0 <- tbl_df(rbind(cbind(subject_test, test_labels, testset), cbind(subject_train, train_labels, trainset)))
data <- tbl_df(merge(activities, data0, by.x="id", by.y="id"))  %>% select(-id)
data0
data
rm(list = ls())
library(dplyr)
library(reshape2)
dpathbase <- "UCI HAR Dataset/"
dpathtest <- paste0(dpathbase, "test/")
dpathtrain <- paste0(dpathbase, "train/")
activities <- tbl_df(read.table(paste0(dpathbase, "activity_labels.txt"), col.names= c("id", "activity")))
features <- tbl_df(read.table(paste0(dpathbase, "features.txt"), col.names= c("ind", "names")))
test_labels <- tbl_df(read.table(paste0(dpathtest, "y_test.txt"), col.names= "act_id"))
train_labels <- tbl_df(read.table(paste0(dpathtrain, "y_train.txt"), col.names= "act_id"))
subject_test <- tbl_df(read.table(paste0(dpathtest, "subject_test.txt"), col.names= "subject_id"))
subject_train <- tbl_df(read.table(paste0(dpathtrain, "subject_train.txt"), col.names= "subject_id"))
testset <- tbl_df(read.table(paste0(dpathtest, "X_test.txt"), col.names=features$names, colClasses = "numeric"))
trainset <- tbl_df(read.table(paste0(dpathtrain, "X_train.txt"), col.names=features$names, colClasses = "numeric"))
# Clipping the 'test' and 'train' datasets together
data0 <- tbl_df(rbind(cbind(subject_test, test_labels, testset), cbind(subject_train, train_labels, trainset)))
data <- tbl_df(merge(activities, data0, by.x="id", by.y="act_id"))  %>% select(-id)
data0
data
mvars <- names(data_s)[!names(data_s) %in% c("activity", "subject_id")]
data_s <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
mvars <- names(data_s)[!names(data_s) %in% c("activity", "subject_id")]
mvars2 <- names(data_s)[names(data_s) !%in% c("activity", "subject_id")]
mvars2 <- names(data_s)[names(data_s) %!in% c("activity", "subject_id")]
v <- c("miguel", "lucas")
!v
v %in% c("activity", "subject_id")
v %in% c("lucas prol", "subject_id")
v %in% c("lucas", "subject_id")
!v %in% c("lucas", "subject_id")
!(v %in% c("lucas", "subject_id"))
mvars <- names(data_s)[!names(data_s) %in% c("activity", "subject_id")]
mvars <- names(data_s)[!(names(data_s) %in% c("activity", "subject_id"))]
head(mvars)
rm(list = ls())
dpathbase <- "UCI HAR Dataset/"
dpathtest <- paste0(dpathbase, "test/")
dpathtrain <- paste0(dpathbase, "train/")
# Reading the necessary files and loading into objects
activities <- tbl_df(read.table(paste0(dpathbase, "activity_labels.txt"), col.names= c("id", "activity")))
features <- tbl_df(read.table(paste0(dpathbase, "features.txt"), col.names= c("ind", "names")))
test_labels <- tbl_df(read.table(paste0(dpathtest, "y_test.txt"), col.names= "act_id"))
train_labels <- tbl_df(read.table(paste0(dpathtrain, "y_train.txt"), col.names= "act_id"))
subject_test <- tbl_df(read.table(paste0(dpathtest, "subject_test.txt"), col.names= "subject_id"))
subject_train <- tbl_df(read.table(paste0(dpathtrain, "subject_train.txt"), col.names= "subject_id"))
testset <- tbl_df(read.table(paste0(dpathtest, "X_test.txt"), col.names=features$names, colClasses = "numeric"))
trainset <- tbl_df(read.table(paste0(dpathtrain, "X_train.txt"), col.names=features$names, colClasses = "numeric"))
# Clipping the 'test' and 'train' datasets together
data0 <- tbl_df(rbind(cbind(subject_test, test_labels, testset), cbind(subject_train, train_labels, trainset)))
data <- tbl_df(merge(activities, data0, by.x="id", by.y="act_id"))  %>% select(-id)
# I select all features with 'mean' or 'std' in their names, with either upper or lower case
data_s <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
# 'dataMelt' is tidy
mvars <- names(data_s)[!(names(data_s) %in% c("activity", "subject_id"))]  # all the column names except 'activity' and 'subject_id'
dataMelt <- tbl_df(melt(data_s, id=c("activity", "subject_id"), measure.vars=mvars))
# Final tidy dataset
dataMelt_g <- dataMelt %>% group_by(activity, subject_id, variable) %>% summarize(mean=mean(value)) %>% print
data
data <- mutate(data, subject_id=as.character(subject_id))
data
data_s <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
mvars <- names(data_s)[!(names(data_s) %in% c("activity", "subject_id"))]  # all the column names except 'activity' and 'subject_id'
dataMelt <- tbl_df(melt(data_s, id=c("activity", "subject_id"), measure.vars=mvars))
dataMelt_g <- dataMelt %>% group_by(activity, subject_id, variable) %>% summarize(mean=mean(value))
dataMelt
dataMelt_g
data <- mutate(data, subject_id=as.factor(subject_id))
data_s <- select(data, activity, subject_id, matches("mean|std"))  # ‘matches(x, ignore.case = TRUE)’ by default
mvars <- names(data_s)[!(names(data_s) %in% c("activity", "subject_id"))]  # all the column names except 'activity' and 'subject_id'
dataMelt <- tbl_df(melt(data_s, id=c("activity", "subject_id"), measure.vars=mvars))
dataMelt_g <- dataMelt %>% group_by(activity, subject_id, variable) %>% summarize(mean=mean(value))
data
dataMelt
dataMelt_g
